{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","components/TopBar.js","constants.js","components/Profile.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","className","src","logo","alt","Component","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerId","fullName","teamAbbreviation","Profile","console","log","this","props","playerInfo","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","window","d3_hexbin","hexbin","ShotChart","nba","stats","shots","PlayerID","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","CountSlider","state","inputValue","value","onChange","cleanValue","Number","setState","onCountSliderChange","span","min","max","style","marginLeft","DataViewContainer","count","onChartTypeChange","e","target","onTooltipChange","_","debounce","Group","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","searchPlayers","player","onSelect","loadPlayerInfo","options","key","size","onSearch","placeholder","optionLabelProp","suffix","type","Main","findPlayer","info","Object","assign","commonPlayerInfo","playerHeadlineStats","handleSelectPlayer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f77b89e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React, { Component } from 'react';\nimport logo from \"../assets/images/nba-logoman-word-white.svg\";\n\nclass TopBar extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default TopBar;","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\nexport const DEFAULT_PLAYER_INFO = {\n    playerId: 201939,\n    fullName: 'Stephen Curry',\n    teamAbbreviation: 'GSW',\n};","import React, { Component } from 'react';\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\n\nclass Profile extends Component {\n    render() {\n        console.log(this.props.playerInfo)\n        const {\n            teamAbbreviation,\n            teamCity,\n            teamName,\n            playerName,\n            height,\n            weight,\n            playerId,\n            pts, reb, ast, pie,\n          } = this.props.playerInfo;\n       \n        return (\n            <div className=\"profile\">\n            <div className=\"profile-entry player-name\">{`${playerName}`}</div>\n            <img\n              className=\"profile-pic\"\n              src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\n              alt=\"Profile\"\n            />\n            <div className=\"profile-entry\">\n              <div className=\"profile-entry-left\">Team</div>\n              <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\n            </div>\n            <img\n              className=\"team-logo\"\n              src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\n              alt=\"Team\"\n            />\n            <div className=\"profile-entry\">\n              <div className=\"profile-entry-left\">Height</div>\n              <div className=\"profile-entry-right\">{`${height}`}</div>\n            </div>\n            <div className=\"profile-entry\">\n              <div className=\"profile-entry-left\">Weight</div>\n              <div className=\"profile-entry-right\">{`${weight}`}</div>\n            </div>\n            <div className=\"profile-entry\">\n              <div className=\"profile-entry-left\">PTS</div>\n              <div className=\"profile-entry-right\">{`${pts}`}</div>\n            </div>\n            <div className=\"profile-entry\">\n              <div className=\"profile-entry-left\">REB</div>\n              <div className=\"profile-entry-right\">{`${reb}`}</div>\n            </div>\n            <div className=\"profile-entry\">\n              <div className=\"profile-entry-left\">AST</div>\n              <div className=\"profile-entry-right\">{`${ast}`}</div>\n            </div>\n            <div className=\"profile-entry\">\n              <div className=\"profile-entry-left\">PIE</div>\n              <div className=\"profile-entry-right\">{`${pie}`}</div>\n            </div>\n          </div>\n\n        );\n    }\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport nba from 'nba';\nimport * as d3 from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { court, shots } from 'd3-shotchart';\nimport PropTypes from 'prop-types';\n\nwindow.d3_hexbin = {hexbin : hexbin};\n\nclass ShotChart extends Component {\n    static propTypes = {\n        playerId: PropTypes.number.isRequired,\n        minCount: PropTypes.number,\n        chartType: PropTypes.string,\n        displayTooltip: PropTypes.bool,\n    }\n\n    componentDidUpdate() {\n        nba.stats.shots({\n          PlayerID: this.props.playerId\n        }).then((response) => {\n        \n          const final_shots = response.shot_Chart_Detail.map(shot => ({\n            x: (shot.locX + 250) / 10,\n            y: (shot.locY + 50) / 10,\n            action_type: shot.actionType,\n            shot_distance: shot.shotDistance,\n            shot_made_flag: shot.shotMadeFlag,\n          }));\n         \n          const courtSelection = d3.select(\"#shot-chart\");\n          courtSelection.html('');\n          const chart_court = court().width(500);\n          const chart_shots = shots()\n              .shotRenderThreshold(this.props.minCount)\n              .displayToolTips(this.props.displayTooltip)\n              .displayType(this.props.chartType);\n          courtSelection.call(chart_court);\n          courtSelection.datum(final_shots).call(chart_shots);\n        });\n      }\n     \n\n    render() {\n        console.log(this.props.playerId)\n        return (\n            <div id=\"shot-chart\"></div>\n        );\n    }\n}\n\nexport default ShotChart;","import React, { Component } from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\nclass CountSlider extends Component {\n    state = {\n        inputValue: this.props.value\n     }\n        \n    onChange = (value) => {\n        console.log(value);\n        const cleanValue = Number(value) ? value: this.state.inputValue;\n        this.setState({\n        inputValue: cleanValue,\n        });\n        this.props.onCountSliderChange(cleanValue);\n    }\n\n    render() {\n        return (\n            <Row>\n            <Col span={12}>\n              <Slider min={1} max={20} onChange={this.onChange} value={this.state.inputValue} />\n            </Col>\n            <Col span={4}>\n              <InputNumber\n                min={1}\n                max={20}\n                style={{ marginLeft: 16 }}\n                value={this.state.inputValue}\n                onChange={this.onChange}\n              />\n            </Col>\n          </Row>\n     \n        );\n    }\n}\n\nexport default CountSlider;\n","import React, { Component } from 'react';\nimport ShotChart from './ShotChart'; \nimport CountSlider from './CountSlider';\nimport _ from 'lodash';\nimport { Radio, Row, Col, Switch } from 'antd';\n\nclass DataViewContainer extends Component {\n    state = {\n        minCount: 2,\n        chartType: 'hexbin',\n        displayTooltip: true,\n      }\n     \n    onCountSliderChange = (count) => {\n        console.log(count);\n        this.setState({ minCount: count });\n    }\n    onChartTypeChange =(e) => {\n        console.log(e.target.value);\n        this.setState({ chartType: e.target.value});\n    }\n\n    onTooltipChange = (displayTooltip) => {\n        console.log(displayTooltip);\n        this.setState({ displayTooltip });\n    }\n     \n     \n\n    render() {\n        return (\n            <div className=\"data-view\">\n                <ShotChart \n                    playerId={this.props.playerId}\n                    minCount={this.state.minCount}   \n                    chartType={this.state.chartType}\n                    displayTooltip={this.state.displayTooltip}\n                    />\n                <div className=\"filters\">\n                    {\n                        this.state.chartType === 'hexbin' ?\n                        <CountSlider \n                                value={this.state.minCount}\n                                onCountSliderChange={_.debounce(this.onCountSliderChange, 500)}/> : null\n                    }\n                \n                    <br/>\n                    <Row>\n                        <Col span={9}>\n                            <Radio.Group onChange={this.onChartTypeChange} value={this.state.chartType}>\n                            <Radio value=\"hexbin\">Hexbin</Radio>\n                            <Radio value=\"scatter\">Scatter</Radio>\n                            </Radio.Group>\n                        </Col>\n                        <Col span={4}>\n                            <Switch\n                                checkedChildren=\"On\"\n                                unCheckedChildren=\"Off\"\n                                onChange={this.onTooltipChange}\n                                defaultChecked />\n                        </Col>\n                    </Row>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataViewContainer;","import React, { Component } from 'react';\nimport nba from 'nba';\nimport { AutoComplete, Input, Icon } from 'antd';\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\n\nconst { Option } = AutoComplete;\n\nclass SearchBar extends Component {\n    state = {\n        dataSource: [],\n    }\n\n    handleSearch = (value) => {\n        console.log(value);\n\n        this.setState({\n          dataSource: !value ?\n            [] : nba.searchPlayers(value).map(player => ({\n                fullName: player.fullName,\n                playerId: player.playerId,\n          }))\n\n        })\n        //console.log(nba.searchPlayers(value));\n    }\n    onSelect = (playerName) => {\n        this.props.loadPlayerInfo(playerName);\n    }\n       \n\n    render() {\n        const { dataSource } = this.state;\n        const options = dataSource.map((player) => (\n            <Option key={player.fullName} value={player.fullName}          \n                className=\"player-option\">\n                <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}/>\n                <span className=\"player-option-label\">{player.fullName}</span>\n            </Option>\n        ));\n      \n        return (\n           \n            <AutoComplete\n                className=\"search-bar\"\n                size=\"large\"\n                dataSource={options}\n                onSelect={this.onSelect}\n                onSearch={this.handleSearch}\n                placeholder=\"Search NBA Player\"\n                optionLabelProp=\"value\"\n                >\n            <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\n            </AutoComplete>\n\n        );\n    }\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport nba from 'nba';\nimport Profile from './Profile';\nimport DataViewContainer from './DataViewContainer';\nimport SearchBar from './SearchBar';\nimport { DEFAULT_PLAYER_INFO } from '../constants';\n\n\n\nclass Main extends Component {\n    state = {\n        playerId: nba.findPlayer('Stephen Curry').playerId,\n        playerInfo: DEFAULT_PLAYER_INFO,\n    }\n\n    componentDidMount() {\n        this.loadPlayerInfo(this.state.playerInfo.fullName);\n    }\n\n    loadPlayerInfo = (playerName) => {\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId }).then((info) => {\n          const playerInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n          this.setState({ playerInfo });\n        });\n    }\n\n    handleSelectPlayer = (playerName) => {\n        this.loadPlayerInfo(playerName);\n    }\n     \n\n    render() {\n        //console.log(this.state.playerId);\n        return (\n            <div className=\"main\">\n                <SearchBar loadPlayerInfo={this.handleSelectPlayer}/>\n                <div className=\"player\">\n                    <Profile playerInfo={this.state.playerInfo}/>\n                    <DataViewContainer playerId={this.state.playerInfo.playerId}/>\n                </div>\n            </div>\n          \n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport TopBar from './TopBar';\nimport Main from './Main';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}